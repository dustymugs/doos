'
' doos: A multi-threaded server for running client-provided macros in OpenOffice.org
' Copyright (C) 2008 - 2009  therudegesture and dustymugs
'
' This program is free software; you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation; either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program; if not, a copy is available at
' http://www.gnu.org/licenses/gpl-3.0-standalone.html
'

' set value of texttable cell at visible cursor
Sub setValueInTextTableCell(oDoc as Object, value As String, Optional replace As Boolean)
	Dim oVC as Object

	oVC = oDoc.CurrentController.getViewCursor()
	If IsNull(oVC.TextTable) OR IsEmpty(oVC.TextTable) Then
		Exit Sub
	End If

	If IsMissing(replace) Then replace = False

	oCurCell = oVC.Cell
	oText = oCurCell.getText()
	oTC = oText.createTextCursorByRange(oText.getText())
	oText.insertString(oTC, value, replace)
End Sub
Sub setVITTC(o as Object, v As String, Optional r As Boolean)
	setValueInTextTableCell(o, v, r)
End Sub

' shift cursor within texttable by a direction and an increment value
' this moves the cursor to a new cell
Sub shiftCursorWithinTextTable(oDoc, direction As String, Optional Increment)
	Dim oVC as Object

	oVC = oDoc.CurrentController.getViewCursor()
	If IsNull(oVC.TextTable) OR IsEmpty(oVC.TextTable) Then
		Exit Sub
	End If

	If IsMissing(Increment) OR NOT IsNumeric(Increment) Then Increment = 1

	Select Case LCase(direction)
		Case "right"
			oVC.goRight(Increment, False)
		Case "left"
			oVC.goLeft(Increment, False)
		Case "up"
			oVC.goUp(Increment, False)
		Case "down"
			oVC.goDown(Increment, False)
	End Select
End Sub
Sub shiftCWTT(o, d As String, Optional I)
	shiftCursorWithinTextTable(o, d, I)
End Sub

' move cursor within texttable by cell to jump to
Sub jumpCursorWithinTextTable(oDoc as Object, column As Integer, row As Integer)
	Dim oVC As Object
	Dim oTable As Object

	oVC = oDoc.getCurrentController().getViewCursor()
	If IsNull(oVC.TextTable) OR IsEmpty(oVC.TextTable) Then
		Exit Sub
	End If

	oTable = oVC.TextTable
	oVC.gotoRange(oTable.getCellByPosition(column, row), False)
End Sub
Sub jumpCWTT(o, c As Integer, r As Integer)
	jumpCursorWithinTextTable(o, c, r)
End Sub

' put cursor into texttable
' default is to set at first row, first cell
Sub moveCursorIntoTextTable(oDoc as Object, tableName As String, Optional column, Optional row)
	Dim oTable As Object

	oTable = oDoc.getTextTables().getByName(tableName)
	oDoc.getCurrentController().select(oTable)

	If IsMissing(column) OR NOT IsNumeric(column) Then column = 0
	If IsMissing(row) OR NOT IsNumeric(row) Then row = 0

	jumpCursorWithinTextTable(column, row)
End Sub
Sub moveCITT(o as Object, tN As String, Optional c, Optional r)
	moveCursorIntoTextTable(o, tN, c, r)
End Sub

' set a value at position indicated by bookmark
' this does not move the visible cursor
Sub setValueByBookMark(oDoc as Object, bmName As String, value As String)
	Dim oBkMk As Object

	oBkMk = oDoc.getBookmarks().getByName(bmName)
	oBkMk.getAnchor().setString(value)
End Sub
Sub setVBBM(o as Object, bN As String, v As String)
	setValueByBookMark(o, bN, v)
End Sub

' move visible cursor to bookmark
Sub moveCursorToBookMark(oDoc as Object, bmName As String)
	Dim oVC As Object
	Dim oBkMk As Object

	oVC = oDoc.getCurrentController().getViewCursor()
	oBkMk = oDoc.getBookmarks().getByName(bmName).getAnchor()
	oVC.gotoRange(oBkMk, False)
End Sub
Sub moveCTBM(o as Object, bN As String)
	moveCursorToBookMark(o, bN)
End Sub

' search and replace text
Sub searchAndReplaceText(oDoc As Object, txtSearch As String, txtReplace As String, Optional caseSensitive As Boolean)
	Dim oReplace as Object

	If IsMissing(caseSensitive) Then caseSensitive = TRUE

	oReplace = oDoc.createReplaceDescriptor()
	oReplace.SearchCaseSensitive = caseSensitive
	oReplace.SearchString = txtSearch
	oReplace.ReplaceString = txtReplace

	oDoc.ReplaceAll(oReplace)
End Sub
Sub searchNRT(o As Object, s As String, r As String, Optional cS As Boolean)
	searchAndReplaceText(o, s, r, cS)
End Sub
